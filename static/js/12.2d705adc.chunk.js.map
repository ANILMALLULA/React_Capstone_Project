{"version":3,"sources":["components/formikFolder/Input.js","components/formikFolder/Textarea.js","components/formikFolder/FormikController.js","components/ResultMessage.js","components/user/Registration.js"],"names":["Input","props","label","name","rest","style","display","flexDirection","marginBottom","htmlFor","fontWeight","fontSize","id","borderRadius","border","padding","width","height","placeholder","msg","color","Textarea","as","FormikController","control","ResultMessage","className","Registration","dispatch","useDispatch","auth","useSelector","state","users","useEffect","registeredStateOnLoad","validationSchema","Yup","email","required","fname","lname","password","location","loginSuccess","to","textAlign","margin","registerSuccess","justifyContent","alignItems","marginLeft","alignSelf","registerLoading","registerFailed","errors","response","status","message","initialValues","onSubmit","values","register","formik","marginTop","e","type","disabled","isValid"],"mappings":"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","file":"static/js/12.2d705adc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\n\r\nconst Input = (props) => {\r\n  const { label, name, ...rest } = props;\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        marginBottom: \"10px\",\r\n      }}\r\n    >\r\n      <label htmlFor={name} style={{ fontWeight: \"bold\", fontSize: \"16px\" }}>\r\n        {label}:\r\n      </label>\r\n      <Field\r\n        id={name}\r\n        name={name}\r\n        {...rest}\r\n        style={{\r\n          fontSize: \"14px\",\r\n          marginBottom: \"10px\",\r\n          borderRadius: \"9px\",\r\n          border: \"1px solid #ccc\",\r\n          padding: \"7px\",\r\n          width: \"350px\",\r\n          height: \"45px\",\r\n        }}\r\n        placeholder={`Type ${label} here...`}\r\n      />\r\n      <ErrorMessage name={name}>\r\n        {(msg) => (\r\n          <div style={{ color: \"red\", fontWeight: \"bold\", fontSize: \"13px\" }}>\r\n            {msg}*\r\n          </div>\r\n        )}\r\n      </ErrorMessage>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\n\r\nconst Textarea = (props) => {\r\n  const { label, name, ...rest } = props;\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        marginBottom: \"10px\",\r\n      }}\r\n    >\r\n      <label htmlFor={name} style={{ fontWeight: \"bold\", fontSize: \"18px\" }}>\r\n        {label}:\r\n      </label>\r\n      <Field\r\n        id={name}\r\n        name={name}\r\n        {...rest}\r\n        style={{\r\n          fontSize: \"15px\",\r\n          marginBottom: \"10px\",\r\n          borderRadius: \"9px\",\r\n          border: \"1px solid #ccc\",\r\n          padding: \"7px\",\r\n          width: \"70%\",\r\n          height: \"200px\",\r\n        }}\r\n        placeholder={`Type ${label} here...`}\r\n        as='textarea'\r\n      />\r\n      <ErrorMessage name={name}>\r\n        {(msg) => (\r\n          <div style={{ color: \"red\", fontWeight: \"bold\", fontSize: \"13px\" }}>\r\n            {msg}*\r\n          </div>\r\n        )}\r\n      </ErrorMessage>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Textarea;\r\n","import React from \"react\";\r\nimport Input from \"./Input\";\r\nimport Textarea from \"./Textarea\";\r\n\r\nconst FormikController = (props) => {\r\n  const { control, ...rest } = props;\r\n  switch (control) {\r\n    case \"input\":\r\n      return <Input {...rest} />;\r\n    case \"textarea\":\r\n      return <Textarea {...rest} />; \r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport default FormikController;\r\n","function ResultMessage({ msg, color }) {\r\n  return msg !== \"\" ? (\r\n    <h3 className={`text-center text-${color}`} style={{ fontSize: \"20px\" }}>\r\n      {msg}\r\n    </h3>\r\n  ) : null;\r\n}\r\n\r\nexport default ResultMessage;\r\n","import React, { useEffect } from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport FormikController from \"../formikFolder/FormikController\";\r\nimport * as Yup from \"yup\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport ResultMessage from \"../ResultMessage\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { register, registeredStateOnLoad } from \"../actions/userActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Registration = (props) => {\r\n  const initialValues = {\r\n    email: \"\",\r\n    fname: \"\",\r\n    lname: \"\",\r\n    password: \"\",\r\n    location: \"\",\r\n  };\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.users);\r\n\r\n  useEffect(() => {\r\n    dispatch(registeredStateOnLoad());\r\n    return () => {\r\n      dispatch(registeredStateOnLoad());\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const registerUser = (values) => {\r\n    dispatch(register(values));\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    email: Yup.string()\r\n      .email(\"Please enter valid email address\")\r\n      .required(\"Required\"),\r\n    fname: Yup.string().required(\"Required\"),\r\n    lname: Yup.string().required(\"Required\"),\r\n    password: Yup.string().required(\"Required\"),\r\n    location: Yup.string().required(\"Required\"),\r\n  });\r\n\r\n  return auth.loginSuccess ? (\r\n    <Redirect to='/' />\r\n  ) : (\r\n    <>\r\n      <h5 style={{ textAlign: \"center\", margin: \"50px 0\", fontWeight: \"bold\" }}>\r\n        Please Register here\r\n      </h5>\r\n\r\n      {auth.registerSuccess ? (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <ResultMessage\r\n            msg='Great!! Registration Successfull. Please Login now.'\r\n            color='success'\r\n          />\r\n          <Link\r\n            to='/login'\r\n            style={{\r\n              color: \"black\",\r\n              fontWeight: \"700\",\r\n              marginLeft: \"20px\",\r\n              fontSize: \"13px\",\r\n              alignSelf: \"center\",\r\n            }}\r\n          >\r\n            {\" \"}\r\n            Click here to Login Page\r\n          </Link>\r\n        </div>\r\n      ) : auth.registerLoading ? (\r\n        <Spinner />\r\n      ) : auth.registerFailed ? (\r\n        <ResultMessage\r\n          color='warning'\r\n          msg={\r\n            auth.errors\r\n              ? auth.errors.response && auth.errors.response.status === 500\r\n                ? \"Your Email address is already Registered\"\r\n                : auth.errors.message\r\n              : \"Something went wrong\"\r\n          }\r\n        />\r\n      ) : null}\r\n\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={registerUser}\r\n      >\r\n        {(formik) => {\r\n          return (\r\n            <Form>\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    marginTop: \"45px\",\r\n                  }}\r\n                  onSubmit={(e) => {\r\n                    register(e);\r\n                  }}\r\n                >\r\n                  <FormikController\r\n                    control='input'\r\n                    type='email'\r\n                    label='Email'\r\n                    name='email'\r\n                  />\r\n\r\n                  <FormikController\r\n                    control='input'\r\n                    type='text'\r\n                    label='First name'\r\n                    name='fname'\r\n                  />\r\n\r\n                  <FormikController\r\n                    control='input'\r\n                    type='text'\r\n                    label='Last Name'\r\n                    name='lname'\r\n                  />\r\n                  <FormikController\r\n                    control='input'\r\n                    type='password'\r\n                    label='Set Password'\r\n                    name='password'\r\n                  />\r\n\r\n                  <FormikController\r\n                    control='input'\r\n                    type='text'\r\n                    label='Location'\r\n                    name='location'\r\n                  />\r\n\r\n                  <button\r\n                    type='submit'\r\n                    className='btn btn-dark'\r\n                    style={{\r\n                      width: \"180px\",\r\n                      fontWeight: \"bold\",\r\n                      marginTop: \"10px\",\r\n                      padding: \"8px\",\r\n                    }}\r\n                    disabled={!formik.isValid}\r\n                  >\r\n                    Register\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n"],"sourceRoot":""}